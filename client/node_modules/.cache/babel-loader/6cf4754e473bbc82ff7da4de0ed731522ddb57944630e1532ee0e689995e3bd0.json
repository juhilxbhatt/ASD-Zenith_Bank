{"ast":null,"code":"var _jsxFileName = \"/Users/J.Bhatt/Desktop/Personal/Projects/ASD-Zenith_Bank/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to hold the fetched data from the backend\n  const [data, setData] = useState(null);\n\n  // useEffect hook to fetch data when the component mounts\n  useEffect(() => {\n    // Make a GET request to the backend API\n    axios.get('/api/data').then(response => {\n      // On successful response, set the data state with the fetched data\n      setData(response.data);\n    }).catch(error => {\n      // Log any error that occurs during the data fetch\n      console.error(\"There was an error fetching data!\", error);\n    });\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Zenith Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Data from Flask:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Show a loading message while data is being fetched\n    _jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","data","setData","get","then","response","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/J.Bhatt/Desktop/Personal/Projects/ASD-Zenith_Bank/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  // State to hold the fetched data from the backend\n  const [data, setData] = useState(null);\n\n  // useEffect hook to fetch data when the component mounts\n  useEffect(() => {\n    // Make a GET request to the backend API\n    axios.get('/api/data')\n      .then(response => {\n        // On successful response, set the data state with the fetched data\n        setData(response.data);\n      })\n      .catch(error => {\n        // Log any error that occurs during the data fetch\n        console.error(\"There was an error fetching data!\", error);\n      });\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  return (\n    <div className=\"App\">\n      <h1>Zenith Bank</h1>\n      {data ? (\n        <div>\n          <h2>Data from Flask:</h2>\n          {/* Display the fetched data as a formatted JSON string */}\n          <pre>{JSON.stringify(data, null, 2)}</pre>\n        </div>\n      ) : (\n        // Show a loading message while data is being fetched\n        <p>Loading data...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACO,GAAG,CAAC,WAAW,CAAC,CACnBC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAH,OAAO,CAACG,QAAQ,CAACJ,IAAI,CAAC;IACxB,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACET,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBb,IAAI,gBACHH,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEzBhB,OAAA;QAAAY,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACf,IAAI,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;IAAA;IAEN;IACAhB,OAAA;MAAAY,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CAjCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}