{"ast":null,"code":"var _jsxFileName = \"/home/edphong/Desktop/school/41026/ASD-Zenith_Bank/client/src/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [message, setMessage] = useState('');\n  const validateEmail = email => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\.com$/;\n    return emailPattern.test(email);\n  };\n  const validatePassword = password => {\n    const passwordPattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n    return passwordPattern.test(password);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset messages\n    setError('');\n    setSuccess('');\n    setMessage('');\n\n    // Validate input fields\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address that ends with .com.');\n      return;\n    }\n    if (!validatePassword(password)) {\n      setError('Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, and one number.');\n      return;\n    }\n    try {\n      const response = await fetch('/api/LoginPage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setSuccess('Login successful! Redirecting...');\n        // Redirect after a short delay\n        setTimeout(() => {\n          window.location.href = 'http://localhost:3000'; // Change to your desired redirect\n        }, 2000);\n      } else {\n        if (result.error) {\n          setError(result.error);\n        } else {\n          setError('Invalid credentials, please try again.');\n        }\n      }\n    } catch (error) {\n      setError('Something went wrong, please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navbar-button\",\n          onClick: () => window.location.href = '/login',\n          children: \"Zenith Bank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            onClick: handleSubmit,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"register-text\",\n            onClick: () => window.location.href = '/create-user',\n            children: \"Don't have an account? Register here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"HlYxMvssZE7ISKKnRjpZ+SNrCJo=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","success","setSuccess","message","setMessage","validateEmail","emailPattern","test","validatePassword","passwordPattern","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","setTimeout","window","location","href","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/home/edphong/Desktop/school/41026/ASD-Zenith_Bank/client/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './LoginPage.css';\n\nconst LoginPage = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [message, setMessage] = useState('');\n\n    const validateEmail = (email) => {\n        const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\.com$/;\n        return emailPattern.test(email);\n    };\n\n    const validatePassword = (password) => {\n        const passwordPattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n        return passwordPattern.test(password);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Reset messages\n        setError('');\n        setSuccess('');\n        setMessage('');\n\n        // Validate input fields\n        if (!validateEmail(email)) {\n            setError('Please enter a valid email address that ends with .com.');\n            return;\n        }\n\n        if (!validatePassword(password)) {\n            setError('Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, and one number.');\n            return;\n        }\n\n        try {\n            const response = await fetch('/api/LoginPage', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }),\n            });\n\n            const result = await response.json();\n\n            if (response.ok) {\n                setSuccess('Login successful! Redirecting...');\n                // Redirect after a short delay\n                setTimeout(() => {\n                    window.location.href = 'http://localhost:3000'; // Change to your desired redirect\n                }, 2000);\n            } else {\n                if (result.error) {\n                    setError(result.error);\n                } else {\n                    setError('Invalid credentials, please try again.');\n                }\n            }\n        } catch (error) {\n            setError('Something went wrong, please try again.');\n        }\n    };\n\n    return (\n        <div>\n            <nav className=\"navbar\">\n                <div className=\"navbar-content\">\n                    <button className=\"navbar-button\" onClick={() => window.location.href = '/login'}>\n                        Zenith Bank\n                    </button>\n                    <div className=\"login-inputs\">\n                        <input\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            placeholder=\"Email\"\n                            required\n                        />\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password\"\n                            required\n                        />\n                        <button className=\"login-button\" onClick={handleSubmit}>Login</button>\n                        <span className=\"register-text\" onClick={() => window.location.href = '/create-user'}>\n                            Don't have an account? Register here!\n                        </span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className=\"login-container\">\n                {error && <p className=\"error\">{error}</p>}\n                {success && <p className=\"success\">{success}</p>}\n                {message && <p className=\"message\">{message}</p>}\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}