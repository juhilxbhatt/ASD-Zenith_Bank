{"ast":null,"code":"var _jsxFileName = \"/home/edphong/Desktop/school/41026/ASD-Zenith_Bank/client/src/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const isValidEmail = email => {\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Basic email format check\n    return regex.test(email);\n  };\n  const isValidPassword = password => {\n    // Check for minimum length and at least one digit\n    return password.length >= 8 && /\\d/.test(password);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Clear previous errors\n    setSuccess(''); // Clear previous success message\n\n    // Input validation\n    if (!isValidEmail(email)) {\n      setError('Please enter a valid email address.');\n      return;\n    }\n    if (!isValidPassword(password)) {\n      setError('Password must be at least 8 characters long and contain at least one number.');\n      return;\n    }\n    try {\n      const response = await fetch('/api/LoginPage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setSuccess('Login successful! Redirecting...');\n        // Redirect to localhost:3000 after a short delay\n        setTimeout(() => {\n          window.location.href = 'http://localhost:3000';\n        }, 2000);\n      } else {\n        if (result.error) {\n          setError(result.error);\n        } else if (result.message) {\n          // Assume server sends a message for non-existent accounts\n          setError(result.message);\n        } else {\n          setError('Invalid credentials, please try again.');\n        }\n        setSuccess('');\n      }\n    } catch (error) {\n      setError('Something went wrong, please try again.');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navbar-button\",\n          onClick: () => window.location.href = '/login',\n          children: \"Zenith Bank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            onClick: handleSubmit,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"register-text\",\n            onClick: () => window.location.href = '/create-user',\n            children: \"Don't have an account? Register here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"dbdaq/Kg/qcvjBFq8Y0poN11kYI=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","success","setSuccess","isValidEmail","regex","test","isValidPassword","length","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","setTimeout","window","location","href","message","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/home/edphong/Desktop/school/41026/ASD-Zenith_Bank/client/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './LoginPage.css';\n\nconst LoginPage = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    const isValidEmail = (email) => {\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Basic email format check\n        return regex.test(email);\n    };\n\n    const isValidPassword = (password) => {\n        // Check for minimum length and at least one digit\n        return password.length >= 8 && /\\d/.test(password);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(''); // Clear previous errors\n        setSuccess(''); // Clear previous success message\n\n        // Input validation\n        if (!isValidEmail(email)) {\n            setError('Please enter a valid email address.');\n            return;\n        }\n        if (!isValidPassword(password)) {\n            setError('Password must be at least 8 characters long and contain at least one number.');\n            return;\n        }\n\n        try {\n            const response = await fetch('/api/LoginPage', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }),\n            });\n\n            const result = await response.json();\n\n            if (response.ok) {\n                setSuccess('Login successful! Redirecting...');\n                // Redirect to localhost:3000 after a short delay\n                setTimeout(() => {\n                    window.location.href = 'http://localhost:3000';\n                }, 2000);\n            } else {\n                if (result.error) {\n                    setError(result.error);\n                } else if (result.message) { // Assume server sends a message for non-existent accounts\n                    setError(result.message);\n                } else {\n                    setError('Invalid credentials, please try again.');\n                }\n                setSuccess('');\n            }\n        } catch (error) {\n            setError('Something went wrong, please try again.');\n            setSuccess('');\n        }\n    };\n\n    return (\n        <div>\n            <nav className=\"navbar\">\n                <div className=\"navbar-content\">\n                    <button className=\"navbar-button\" onClick={() => window.location.href = '/login'}>\n                        Zenith Bank\n                    </button>\n                    <div className=\"login-inputs\">\n                        <input\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            placeholder=\"Email\"\n                            required\n                        />\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password\"\n                            required\n                        />\n                        <button className=\"login-button\" onClick={handleSubmit}>Login</button>\n                        <span className=\"register-text\" onClick={() => window.location.href = '/create-user'}>\n                            Don't have an account? Register here!\n                        </span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className=\"login-container\">\n                {error && <p className=\"error\">{error}</p>}\n                {success && <p className=\"success\">{success}</p>}\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}