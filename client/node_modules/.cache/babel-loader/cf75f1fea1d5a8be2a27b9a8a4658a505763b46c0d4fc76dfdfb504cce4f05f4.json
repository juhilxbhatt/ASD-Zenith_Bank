{"ast":null,"code":"var _jsxFileName = \"/Users/J.Bhatt/Desktop/Personal/Projects/ASD-Zenith_Bank/client/src/TransactionLogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionLogs() {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [selectedLog, setSelectedLog] = useState(null);\n  useEffect(() => {\n    // Fetch transaction logs for a specific user\n    axios.get('/api/transaction_logs?userID=66dba291464bf428046deaf2').then(response => {\n      setLogs(response.data);\n    }).catch(error => {\n      console.error('Error fetching transaction logs', error);\n    });\n  }, []);\n\n  // Helper function to format the date\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(); // Format as 'MM/DD/YYYY' or similar\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setSelectedLog(log),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), \" $\", log.Amount, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), \" \", formatDate(log.Date), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 59\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), selectedLog && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transaction Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }, this), \" $\", selectedLog.Amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }, this), \" \", formatDate(selectedLog.Date)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }, this), \" \", selectedLog.Description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionLogs, \"Ju/qhOBsqMcxYLkGt9QiKTjLwy4=\");\n_c = TransactionLogs;\nexport default TransactionLogs;\nvar _c;\n$RefreshReg$(_c, \"TransactionLogs\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TransactionLogs","_s","logs","setLogs","selectedLog","setSelectedLog","get","then","response","data","catch","error","console","formatDate","dateString","date","Date","toLocaleDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","index","onClick","Amount","className","Description","_c","$RefreshReg$"],"sources":["/Users/J.Bhatt/Desktop/Personal/Projects/ASD-Zenith_Bank/client/src/TransactionLogs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction TransactionLogs() {\n  const [logs, setLogs] = useState([]);\n  const [selectedLog, setSelectedLog] = useState(null);\n\n  useEffect(() => {\n    // Fetch transaction logs for a specific user\n    axios.get('/api/transaction_logs?userID=66dba291464bf428046deaf2')\n      .then(response => {\n        setLogs(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching transaction logs', error);\n      });\n  }, []);\n\n  // Helper function to format the date\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();  // Format as 'MM/DD/YYYY' or similar\n  };\n\n  return (\n    <div>\n      <h1>Transaction Logs</h1>\n      <ul>\n        {logs.map((log, index) => (\n          <li key={index} onClick={() => setSelectedLog(log)}>\n            <strong>Amount:</strong> ${log.Amount} <br />\n            <strong>Date:</strong> {formatDate(log.Date)} <br />\n          </li>\n        ))}\n      </ul>\n\n      {selectedLog && (\n        <div className=\"log-details\">\n          <h2>Transaction Details</h2>\n          <p><strong>Amount:</strong> ${selectedLog.Amount}</p>\n          <p><strong>Date:</strong> {formatDate(selectedLog.Date)}</p>\n          <p><strong>Description:</strong> {selectedLog.Description}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TransactionLogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}