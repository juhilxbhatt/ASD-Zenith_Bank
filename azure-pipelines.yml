trigger:
  branches:
    include:
      - '*'  # This triggers the pipeline on any branch commit

pool:
  vmImage: 'ubuntu-latest'

# Backend Python Steps
steps:
# Set up Python for Backend
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'  # Python version to use
    addToPath: true
  displayName: 'Set up Python 3.x'

# Install backend dependencies
- script: |
    echo "Setting up Python virtual environment - Joseph Jello"
    python -m venv venv  # Create virtual environment
    source venv/bin/activate  # Activate venv
    pip install -r server/requirements.txt  # Install Python dependencies from requirements
    pip install pytest pytest-flask  # Install test dependencies
  displayName: 'Install Python dependencies'

# Run backend tests
- script: |
    echo "Executing Backend Tests - Joseph Jello"
    source venv/bin/activate  # Activate the virtual environment
    export PYTHONPATH=$PYTHONPATH:$(pwd)/server  # Add server folder to Python path
    pytest server/tests/ --junitxml=junit/test-results.xml  # Run backend tests with pytest
  displayName: 'Run backend tests'

# Publish backend test results
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'junit/test-results.xml'
    failTaskOnFailedTests: true
  displayName: 'Publish Backend Test Results'

# Frontend Node.js Steps
# Install Node.js for Frontend
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'  # Specify Node.js version (>= 18.x) for the frontend tests
  displayName: 'Install Node.js 18.x'


# Final logging for pipeline completion
- script: |
    echo "Pipeline completed successfully by Joseph Jello"
  displayName: 'Completion Log'